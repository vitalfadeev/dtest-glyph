scanline delta:

Scanline coverage is stored in differentiated form. Rather than storing the actual coverage we store the difference between each pixel. The reason for this is we only need to write to pixels that are actualy touched by edges plus one extra pixel afterwards. This saves having to either write long spans where coverage is static, or having to track seperate coverage and span as is done by AGG and its ilk.

Because integration and differentiation are linear we can use a single buffer for all the edges crossing a given scanline. 

The scanline delta is in signed integer 17:15 format. This was chosen to take advantage of some features of the x86 SSE instructions.

Once integrated you basicaly have a fixed point winding value for that pixel. That is then converted into coverage depending on the winding rule.

Winding rule:

NonZero: clamp the absolute value to the range [0..0xFFFF]

coverage = min(abs(winding)*2,0xFFFF)

EvenOdd: truncate to 16 bits, 0..0x7FFF stays as is, 0x8000..0xFFFF is folded back down

tmp = cast(int16) winding; // truncate to 16 bits
msk = tmp >> 15; // 0xFFFF if tmp < 0, or 0x0000 otherwise
coverage =  (tmp ^ msk) << 1;

